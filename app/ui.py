import streamlit as st
import pandas as pd
from app.utils import load_model, predict_sentiment
import torch

# T·∫£i m√¥ h√¨nh v√† tokenizer
tokenizer, model = load_model()
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model = model.to(device)
model.eval()

def app_ui():
    st.title("üìä Sentiment Analysis for Customer Feedback")

    option = st.radio("Ch·ªçn c√°ch nh·∫≠p d·ªØ li·ªáu:", ("Nh·∫≠p ph·∫£n h·ªìi", "T·∫£i l√™n file Excel"))

    if option == "Nh·∫≠p ph·∫£n h·ªìi":
        user_input = st.text_area("Nh·∫≠p ph·∫£n h·ªìi c·ªßa kh√°ch h√†ng t·∫°i ƒë√¢y:", height=150)
        if st.button("Ph√¢n t√≠ch c·∫£m x√∫c"):
            if user_input.strip() == "":
                st.warning("Vui l√≤ng nh·∫≠p n·ªôi dung ph·∫£n h·ªìi.")
            else:
                sentiment = predict_sentiment(user_input, tokenizer, model, device)
                st.success(f"K·∫øt qu·∫£ ph√¢n t√≠ch c·∫£m x√∫c: **{sentiment}**")

    else:
        uploaded_file = st.file_uploader("T·∫£i l√™n file Excel (.xlsx) ch·ª©a c·ªôt ph·∫£n h·ªìi", type=["xlsx"])
        if uploaded_file:
            try:
                df = pd.read_excel(uploaded_file)
                st.write("üìÑ File ƒë√£ t·∫£i l√™n:")
                st.dataframe(df)  # ‚úÖ Hi·ªán to√†n b·ªô c·ªôt g·ªëc (user, app, content...)

                if "content" not in df.columns:
                    st.error("‚ö†Ô∏è File c·∫ßn c√≥ c·ªôt t√™n l√† 'content' ch·ª©a ph·∫£n h·ªìi vƒÉn b·∫£n.")
                else:
                    if st.button("Ph√¢n t√≠ch c·∫£m x√∫c"):
                        with st.spinner("ƒêang ph√¢n t√≠ch c·∫£m x√∫c..."):
                            df["sentiment"] = df["content"].astype(str).apply(
                                lambda x: predict_sentiment(x, tokenizer, model, device)
                            )

                        st.success("‚úÖ Ph√¢n t√≠ch xong!")
                        st.dataframe(df)  # ‚úÖ Hi·ªán ƒë·∫ßy ƒë·ªß c√°c c·ªôt sau khi th√™m sentiment

                        # T·∫£i k·∫øt qu·∫£ v·ªÅ
                        output_excel = "sentiment_results.xlsx"
                        df.to_excel(output_excel, index=False)
                        with open(output_excel, "rb") as f:
                            st.download_button(
                                label="üì• T·∫£i k·∫øt qu·∫£ v·ªÅ",
                                data=f,
                                file_name="/output/sentiment_results.xlsx",
                                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                            )
            except Exception as e:
                st.error(f"‚ùå L·ªói khi x·ª≠ l√Ω file: {e}")
